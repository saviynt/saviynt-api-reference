post:
  tags:
    - Security Systems
  summary: Create Security System
  description: >-
    This API creates Security System in EIC.

    The `Authorization` must have `Bearer` followed by `Token`.

    Mandatory params:

    `systemname`   `displayName`

    Optional params:

    `hostname`   `port`   `accessAddWorkflow`   `accessRemoveWorkflow`  
    `addServiceAccountWorkflow`   `removeServiceAccountWorkflow`  
    `connectionparameters`   `automatedProvisioning provisioningTries`

    **Note:** From Release v23.1, you can specify `provisioningTries` between 1
    to 20 based on your requirement.
  operationId: createSecuritySystem
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            accessAddWorkflow:
              type: string
              example: One_Level_Manager_Approval
            accessRemoveWorkflow:
              type: string
              example: One_Level_Manager_Approval
            addServiceAccountWorkflow:
              type: string
              example: One_Level_Manager_Approval
            automatedProvisioning:
              type: string
              example: 'true'
            connectionparameters:
              type: string
              example: '{"conn params":"test"}'
            displayName:
              type: string
              example: sys3Disp
            hostname:
              type: string
              example: 'https://test.test_test'
            port:
              type: string
              example: '1000'
            removeServiceAccountWorkflow:
              type: string
              example: One_Level_Manager_Approval
            systemname:
              type: string
              example: sys3
        examples:
          Create Security System:
            value:
              accessAddWorkflow: One_Level_Manager_Approval
              accessRemoveWorkflow: One_Level_Manager_Approval
              addServiceAccountWorkflow: One_Level_Manager_Approval
              automatedProvisioning: 'true'
              connectionparameters: '{"conn params":"test"}'
              displayName: sys3Disp
              hostname: 'https://test.test_test'
              port: '1000'
              removeServiceAccountWorkflow: One_Level_Manager_Approval
              systemname: sys3
      text/plain:
        examples:
          Create Security System:
            value: "{\n\t\"systemname\" : \"sys3\",\n\t\"displayName\" : \"sys3Disp\",\n\t\"hostname\":\"https://test.test_test\",\n\t\"port\" : \"1000\",\n\t\"accessAddWorkflow\": \"One_Level_Manager_Approval\",\n\t\"accessRemoveWorkflow\" : \"One_Level_Manager_Approval\",\n\t\"addServiceAccountWorkflow\" : \"One_Level_Manager_Approval\",\n\t\"removeServiceAccountWorkflow\" : \"One_Level_Manager_Approval\",\n\t\"connectionparameters\" : \"{\\\"conn params\\\":\\\"test\\\"}\",\n\t\"automatedProvisioning\" : \"true\",\n    \"provisioning\"\n}\n"
  responses:
    '200':
      description: Create Security System
      headers:
        Date:
          schema:
            type: string
            example: 'Fri, 19 Oct 2018 18:46:26 GMT'
        Server:
          schema:
            type: string
            example: Apache-Coyote/1.1
        Set-Cookie:
          schema:
            type: string
            example: CCSRF-TOKEN=677c34fb-3a1c-4e5c-ad5d-a041a4b63a33; Path=/
        X-Content-Type-Options:
          schema:
            type: string
            example: nosniff
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
                example: '0'
              msg:
                type: string
                example: Success
          examples:
            Create Security System:
              value:
                errorCode: '0'
                msg: Success
