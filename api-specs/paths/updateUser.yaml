post:
  tags:
    - Users
  summary: Update User
  description: "This method updates a specific \"user\" record in SSM, based on the input parameter `username` of the relevant user. \n\nAll the input parameters it requires are attributes which could be updated for the relevant user record. The attributes which are supplied with valid values as input to the method, will get updated, if the operation is successfully executed.\n\nThe `Authorization` must have `Bearer` followed by `Token`.\n\nMandatory params:\n\n`username`\n\n***OR***\n\n`propertytosearch`\n\n***Note*** - If both params are passed, propertytosearch will take precedence.\n\nOptional params:\n\n`validateagainstpolicy` - Values: Y/N, default is Y. Checks for the password policy,\n\n`allowpastdate` - true / false (default). If true, allows startdate to be less than current date,\n\n`statuskey` - Values:1/0, 0 - Inactive, 1 - Active,\n\n`updatedusername` - update username,\n\n`User params` like\n    firstname, \n    preferedFirstName,\n    lastname,\n    middlename,\n    street,\n    city,\n    comments,\n    statuskey,\n    startdate(MM-dd-yyyy),\n    enddate(MM-dd-yyyy),\n    manager (manager username),\n    password,\n    location,\n    jobCode,\n    jobDescription,\n    employeeType,\n    systemUserName,\n    departmentNumber,\n    title,\n    state,\n    companyname,\n    costcenter,\n    departmentname,\n    employeeclass,\n    entity,\n    jobcodedesc,\n    locationdesc,\n    locationnumber,\n    siteid,\n    orgunitid,\n    region,\n    regioncode,\n    owner,\n    employeeid,\n    lastsyncdate,\n    createdate,\n    email,\n    phonenumber,\n    job_function,\n    country,\n    displayname,\n    enabled(can be \"1\"/\"true\" or \"0\"/\"false\"),\n    passwordExpired(can be \"1\"/\"true\" or \"0\"/\"false\"),\n\taccountExpired(can be \"1\"/\"true\" or \"0\"/\"false\"),\n\taccountLocked(can be \"1\"/\"true\" or \"0\"/\"false\"),\n    secondaryManager,\n    createdBy,\n    termDate,\n    vendorManager,\n    secondaryPhone,\n    secondaryEmail,\n    customproperty<1-50>,\n    hcp<1-5>,\n    ecp<1-5>,\n    customer(pass the organization name),\n    \n   `securityQuestions` - \n\nExample: \n\"securityQuestions\":[\n\t\t{\n\t\t\t\"securityQuestion\":\"What is your first Pet's name?\",\n\t\t\t\"securityAnswer\":\"kitty\"\n\t\t},\n\t\t{\n\t\t\t\"securityQuestion\":\"What is your favorite food?\",\n\t\t\t\"securityAnswer\":\"food\"\n\t\t}\n\t\t],\n\t\t\n`checkrules` - true/ false (default : true), if true, then rules will be evaluated immediately, if false rules will be evaluated by a job. If checkrulesforapi configuration(true/false/null) is set in the configuration table, then it will take precendence over checkrules parameter.\n\n`inlineruleevaluation` - true/ false (default is true), if true then rules will be evaluated immediately, if false rules will be evaluated by a job.\n\n***Note*** - UpdateUser API will not invoke workflow based on the ***User Modification Workflow*** configuration. Please use updateUserRequest API instead.\n\n***Note*** - Both `checkrules` and `inlineruleevaluation` need to be set as true for the user update rules to be evaluated immediately.\n\n`batchidentifier` - When inlineruleevaluation=false, this Rule Run Unique Identifier can be set and user update rules can be processed later by calling /api/processrules API\n\n***Note*** - This API supports PUT HTTP method along with POST.\n\n***It's highly recommended to pass inlineruleevaluation:\"false\" for bulk load and call processrules api to evaluate and run the rules after the load is done.***"
  operationId: updateUser
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            customproperty1:
              type: string
              example: customized value
            email:
              type: string
              example: test@sav.com
            employeeType:
              type: string
              example: RobotID11111
            firstname:
              type: string
              example: John
            jobcodedesc:
              type: string
              example: QA
            lastname:
              type: string
              example: Chipchase
            manager:
              type: string
              example: admin
            middlename:
              type: string
              example: kumar
            preferedFirstName:
              type: string
              example: RoboID111111
            propertytosearch:
              type: string
              example: lastname
            statuskey:
              type: string
              example: '1'
        examples:
          Update User:
            value:
              customproperty1: customized value
              email: test@sav.com
              employeeType: RobotID11111
              firstname: John
              jobcodedesc: QA
              lastname: Chipchase
              manager: admin
              middlename: kumar
              preferedFirstName: RoboID111111
              propertytosearch: lastname
              statuskey: '1'
  responses:
    '200':
      description: >-
        Update User / Update User - Inactive Manager / Update User -
        propertytosearch param
      headers:
        Access-Control-Allow-Credentials:
          schema:
            type: string
            example: 'true'
        Access-Control-Allow-Origin:
          schema:
            type: string
            example: http://localhost
        Cache-Control:
          schema:
            type: string
            example: post-check=0, pre-check=0
        Date:
          schema:
            type: string
            example: Fri, 01 Jan 2021 02:05:16 GMT
        Expires:
          schema:
            type: string
            example: Sun, 7 May 1995 12:00:00 GMT
        Referrer-Policy:
          schema:
            type: string
            example: same-origin
        Server:
          schema:
            type: string
            example: Apache-Coyote/1.1
        Set-Cookie:
          schema:
            type: string
            example: CCSRF-TOKEN=248093fc-7f94-40aa-9522-257910954d1c; Path=/
        Strict-Transport-Security:
          schema:
            type: string
            example: max-age=31536000; includeSubdomains
        X-Content-Type-Options:
          schema:
            type: string
            example: nosniff
        X-Frame-Options:
          schema:
            type: string
            example: DENY
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
                example: '0'
              message:
                type: string
                example: SUCCESS User Updated Successfully
          examples:
            Update User:
              value:
                errorCode: '0'
                message: SUCCESS User Updated Successfully
            Update User - Inactive Manager:
              value:
                errorCode: '0'
                message: ' manager with username A007825 is inactive.  User Updated Successfully'
            Update User - propertytosearch param:
              value:
                errorCode: '0'
                message: ' User Updated Successfully'
