post:
  tags:
    - security
  summary: Create Password Policy
  description: "This API creates a password policy for your organization.\n\nThe `Authorization` must have a `Bearer` followed by a `Token`.\n\n**Mandatory Parameters**:\n\n- `policyname`: Specify a unique name for the policy. You can include names such as ApplicationPolicy to better identify the type of policy.\n- `expireafter`: Specify length of time until a user password expires and must be changed. You can enter only numeric values.\n    \n\n**Optional Parameters**:\n\n- `description`: StartFragmentSpecify an optional description for the policy.\n- `scope`: Specify the application or user you wish to apply the policy to.\n    - `APPLICATION`: Specify this option, if you want to assign the password policy to applications and cannot be used to validate passwords when usersâ€™ passwords are changed.\n    - `USER`: Specify this option, if you want to assign the password policy at the user level. To change or reset user passwords in EIC, at least one password policy with USER scope must be available. This policy is invoked when a user password change or reset is initiated.\n- `regex`: You can specify regular expressions (regex) to define specific password patterns.\n- `maxrepetedcharacters`: Specify the maximum number of duplicate characters that a password can contain. For example, if you specify `2`, then a password is not accepted if any character is repeated more than two times. You can set a value between `1` and `10` numeric characters.\n- `minimumnumericcharacters`: Specify the minimum number of numeric characters that a password must contain. For example: if you specify `3`, then password should have at least 3 numbers. StartFragmentYou can set a value between `1` and `10` numeric characters.\n- `minimumspecialcharacter`: Specify the minimum number of special characters that a password must contain.\n- `minimumalphanumericcharacters`: Specify the minimum number of alphanumeric characters that a password must contain. For example, if minimum alphanumeric characters specified is `8` and if the password specified is 'j`ohn12`' then the password is not accepted as it is short of two characters in this case with the configured value of `8` characters.\n- `minimumuniquecharacters`: Specify the minimum number of unique characters that a password must contain. Unique characters do not take into consideration duplicate characters.\n- `minimumalphabetcharacters`: Specify the minimum number of alphabetic characters that a password must contain.\n- `minimumuppercasecharacters`: Specify the minimum number of uppercase letters that a password must contain. For example, if minimum uppercase characters are specified as 2 and if password specified is John123 then the password is not accepted as only 1 Uppercase letter is specified in this case.\n    \n- `minimumlowercasecharacters`: Specify minimum number of lowercase letters that a password must contain. For example, if minimum lowercase characters are specified as 2 and if password specified is JOHn123 then the password is not accepted as only 1 lowercase letter is specified in this case.\n    \n- `disallowlastpassword`: Specify the frequency to prevent users from using any previous passwords whose change or reset process was initiated from EIC and not from the target applications. For example, if you specify 10, then users are allowed to reuse a password only after using 10 unique passwords. You can set a value between 1 and 25 numeric characters.\n    \n- `useblacklistdictionary`: Specify `YES` to enable the the password blacklist dictionary. A password is rejected if its value matches a term in a dictionary that you configure.\n    \n- `blacklistedattributes`: Specify the user attributes query to prevent users from using their user or account information.\n    \n- `minimumage`: Specify the minimum period, in hours to limit how frequently users can change the password. For example, if you enter\_2, then the user cannot change the password before\_2\_hours of creating the password.\n    \n- `regexdescription`: Specify a custom regular expression error message if the end user password does not match the regex password policy configuration.\n    \n- `sendnotification`: Specify `true` to send notifications to end users informing them of their upcoming password expiration. Notification emails can be sent to both user and account passwords.\n    \n- notificationemailtemplate:\n- `daystonotify`: Specify the days, before user passwords expire (including service account owners) to send expiry notification email.\n- `primaryidentificationattr`: Specify the parameter to validate the identity of the calling user and make their details visible to the Helpdesk users.\n- `secondaryidentificationattr`: Specify the parameter to validate the identity of the calling user and make their details visible to the Helpdesk users.\n- `resetpasswordnotification`: You can send user password change or password reset notifications to end users. Specify the email template to customize the notification that the user receives.\n    \n\n```\n, `minimumage`, `regexdescription`, `sendnotification`, `notificationemailtemplate`, `daystonotify`, `primaryidentificationattr`, `secondaryidentificationattr`, `resetpasswordnotification`\n\n ```\n\n\\-"
  operationId: createPasswordPolicy
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            blacklistedattributes:
              type: string
              example: testkdkdkd
            daystonotify:
              type: string
              example: '150'
            description:
              type: string
              example: desc
            disallowlastpassword:
              type: string
              example: '9'
            expireafter:
              type: string
              example: '100'
            maxrepetedcharacters:
              type: string
              example: '1'
            minimumage:
              type: string
              example: '200'
            minimumalphabetcharacters:
              type: string
              example: '6'
            minimumalphanumericcharacters:
              type: string
              example: '4'
            minimumlowercasecharacters:
              type: string
              example: '8'
            minimumnumericcharacters:
              type: string
              example: '2'
            minimumspecialcharacter:
              type: string
              example: '3'
            minimumuniquecharacters:
              type: string
              example: '5'
            minimumuppercasecharacters:
              type: string
              example: '7'
            notificationemailtemplate:
              type: string
              example: ' failure email template'
            policyname:
              type: string
              example: user password policy API 198
            primaryidentificationattr:
              type: array
              items:
                type: string
                example: username
              example:
                - username
                - firstname
            regex:
              type: string
              example: ^[a-zA-Z0-9]{6,14}$
            regexdescription:
              type: string
              example: regex desc
            resetpasswordnotification:
              type: string
              example: Actionable Email
            scope:
              type: string
              example: APPLICATION
            secondaryidentificationattr:
              type: array
              items:
                type: string
                example: lastname
              example:
                - lastname
                - email
            sendnotification:
              type: string
              example: 'true'
            useblacklistdictionary:
              type: string
              example: 'NO'
        examples:
          Create Password Policy:
            value:
              blacklistedattributes: testkdkdkd
              daystonotify: '150'
              description: desc
              disallowlastpassword: '9'
              expireafter: '100'
              maxrepetedcharacters: '1'
              minimumage: '200'
              minimumalphabetcharacters: '6'
              minimumalphanumericcharacters: '4'
              minimumlowercasecharacters: '8'
              minimumnumericcharacters: '2'
              minimumspecialcharacter: '3'
              minimumuniquecharacters: '5'
              minimumuppercasecharacters: '7'
              notificationemailtemplate: ' failure email template'
              policyname: user password policy API 198
              primaryidentificationattr:
                - username
                - firstname
              regex: ^[a-zA-Z0-9]{6,14}$
              regexdescription: regex desc
              resetpasswordnotification: Actionable Email
              scope: APPLICATION
              secondaryidentificationattr:
                - lastname
                - email
              sendnotification: 'true'
              useblacklistdictionary: 'NO'
  responses:
    '200':
      description: Create Password Policy
      headers:
        Access-Control-Allow-Credentials:
          schema:
            type: string
            example: 'true'
        Access-Control-Allow-Origin:
          schema:
            type: string
            example: http://localhost
        Cache-Control:
          schema:
            type: string
            example: post-check=0, pre-check=0
        Date:
          schema:
            type: string
            example: Thu, 31 Dec 2020 21:22:20 GMT
        Expires:
          schema:
            type: string
            example: Sun, 7 May 1995 12:00:00 GMT
        Referrer-Policy:
          schema:
            type: string
            example: same-origin
        Server:
          schema:
            type: string
            example: Apache-Coyote/1.1
        Set-Cookie:
          schema:
            type: string
            example: CCSRF-TOKEN=e02759e0-a4a0-4963-bd4d-b232621fd21e; Path=/
        Strict-Transport-Security:
          schema:
            type: string
            example: max-age=31536000; includeSubdomains
        X-Content-Type-Options:
          schema:
            type: string
            example: nosniff
        X-Frame-Options:
          schema:
            type: string
            example: DENY
      content:
        application/json:
          schema:
            type: object
            properties:
              errorcode:
                type: number
                example: 0
              msg:
                type: string
                example: success
          examples:
            Create Password Policy:
              value:
                errorcode: 0
                msg: success
