post:
  tags:
    - security
  summary: Validate User Security Answers
  description: >-
    This API is used to validate the security answers of user with answers
    entered during registration

    Mandatory params:

    `answers` - list of questions and answers to be validated

    `username` OR `propertytosearch` - Any user property like email, manager,
    username, firstname, lastname, preferedFirstName, customproperty

    The `Authorization` must have `Bearer` followed by `Token`.
  operationId: validateUserSecurityAnswers
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            answers:
              type: array
              items:
                type: object
                properties:
                  answer:
                    type: string
                    example: kitty
                  question:
                    type: string
                    example: What is your first Pet name?
              example:
                - answer: kitty
                  question: What is your first Pet name?
                - answer: food
                  question: What is your favorite food?
            email:
              type: string
              example: john.doe@saviynt.com
            propertytosearch:
              type: string
              example: email
        examples:
          Validate User Security Answers:
            value:
              answers:
                - answer: kitty
                  question: What is your first Pet name?
                - answer: food
                  question: What is your favorite food?
              email: john.doe@saviynt.com
              propertytosearch: email
  responses:
    '200':
      description: Validate Security Answers
      headers:
        Date:
          schema:
            type: string
            example: Fri, 14 Sep 2018 22:31:39 GMT
        Server:
          schema:
            type: string
            example: Apache-Coyote/1.1
        Set-Cookie:
          schema:
            type: string
            example: CCSRF-TOKEN=fbc19214-e119-4e8e-947e-6c0a2fb3e809; Path=/
        X-Content-Type-Options:
          schema:
            type: string
            example: nosniff
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
                example: '0'
              validation:
                type: string
                example: successful
          examples:
            Validate Security Answers:
              value:
                errorCode: '0'
                validation: successful
